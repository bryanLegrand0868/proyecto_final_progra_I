/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.loginalumnos;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
        
/**
 *
 * @author bryanlegrand
 */
public class asignacion_estudiantes_cursos extends javax.swing.JFrame {

    /**
     * Creates new form asignacion_estudiantes_cursos
     */
    public asignacion_estudiantes_cursos() {
        initComponents();
        for(Clase c : Loginalumnos.clases){
            jComboBox2.addItem(c.getNombre());
        }
        for(alumno alumnoNuevo : Loginalumnos.usuarioalumno){
            jComboBox1.addItem(alumnoNuevo.getNombre());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Alumno");

        jLabel2.setText("Curso");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setText("Asignar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Asignacion Masiva");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addComponent(jButton1))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox2, 0, 147, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(146, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(30, 30, 30)
                .addComponent(jButton3)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Clase claseSeleccionada = null;
        alumno alumnoSeleccionado = null;
        
        for(Clase c : Loginalumnos.clases){
            if(c.getNombre().equals(jComboBox2.getSelectedItem().toString())){
                claseSeleccionada = c;
                break;
            }
        }
        for(alumno alumnoNuevo : Loginalumnos.usuarioalumno){
            if(alumnoNuevo.getNombre().equals(jComboBox1.getSelectedItem())){
                alumnoSeleccionado = alumnoNuevo;
                break;
            }
        }
/**        if(alumnoSeleccionado!=null && claseSeleccionada!=null){
            claseSeleccionada.getAlumnoAsignados().add(alumnoSeleccionado);
            alumnoSeleccionado.claseAsignada.add(claseSeleccionada);
            alumnoSeleccionado.notasFinales.add(-2);
            JOptionPane.showMessageDialog(this, "Alumno asignado eitosamente :D");
        } **/
        
        if (alumnoSeleccionado != null && claseSeleccionada != null) {
            if (alumnoSeleccionado.claseAsignada.size() < 4 && claseSeleccionada.getAlumnoAsignados().size() < 9) {
                claseSeleccionada.getAlumnoAsignados().add(alumnoSeleccionado);
                alumnoSeleccionado.claseAsignada.add(claseSeleccionada);
                alumnoSeleccionado.notasFinales.add(-2);
                JOptionPane.showMessageDialog(this, "Alumno asignado exitosamente :D");
            } else if (alumnoSeleccionado.claseAsignada.size() >= 4) {
                JOptionPane.showMessageDialog(this, "Este alumno ya está asignado a su máximo de cursos");
            } else if (claseSeleccionada.getAlumnoAsignados().size() >= 9) {
                JOptionPane.showMessageDialog(this, "Este curso está lleno D:");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Alumno o clase no seleccionados");
        } 
        
        System.out.println(alumnoSeleccionado.notasFinales.size());
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        int retorno = jf.showDialog(this, "cargar");
        if (retorno == JFileChooser.APPROVE_OPTION) {
            asignacionMasiva(jf.getSelectedFile().toPath().toString());
        }
        JOptionPane.showMessageDialog(this, "Alumnos asignados exitosamente :D");
    }//GEN-LAST:event_jButton3ActionPerformed

private void asignacionMasiva(String path) {
    try {
        File nuevoArchivo = new File(path);
        FileReader nuevoFR = new FileReader(nuevoArchivo);
        BufferedReader br = new BufferedReader(nuevoFR);
        
        String linea;
        while ((linea = br.readLine()) != null) {
            int hashtag = linea.indexOf("#");
            
            String id_del_curso = linea.substring(0, hashtag);
            String id_del_estudiante = linea.substring(hashtag + 1);
            
            alumno alumnoEncontrado = null;
            Clase cursoEncontrado = null;
            
            // Buscar primero el alumno
            for (alumno a : Loginalumnos.usuarioalumno) {
                if (a.getCarnet().equals(id_del_estudiante)) {
                    alumnoEncontrado = a;
                    break;
                }
            }
            
            // Luego buscar el curso
            for (Clase c : Loginalumnos.clases) {
                if (c.getId().equals(id_del_curso)) {
                    cursoEncontrado = c;
                    break;
                }
            }
            
            System.out.println(alumnoEncontrado.carnet + " carnet del alumno");
            System.out.println(cursoEncontrado.getId() + " id del curso");
            
            Profesor profesorEncontrado = encontrarProfesor(cursoEncontrado.getProfesorasignado());
            ArrayList<String> arreglo_de_IDs_temp = new ArrayList<>();
            
            
            if (alumnoEncontrado != null && cursoEncontrado != null && profesorEncontrado != null) {
                if (alumnoEncontrado.claseAsignada.size() < 4 && cursoEncontrado.getAlumnoAsignados().size() < 9) {
                    cursoEncontrado.getAlumnoAsignados().add(alumnoEncontrado);
                    alumnoEncontrado.claseAsignada.add(cursoEncontrado);
                    alumnoEncontrado.notasFinales.add(-2);
                    
                    if (!profesorEncontrado.getClasesAsignadasProfesor().isEmpty()) {
                        profesorEncontrado.getClasesAsignadasProfesor().forEach(curso -> arreglo_de_IDs_temp.add(curso.getId()));
                        if(!arreglo_de_IDs_temp.contains(id_del_curso)) profesorEncontrado.getClasesAsignadasProfesor().add(cursoEncontrado);
                    } else if(profesorEncontrado.getClasesAsignadasProfesor().isEmpty()) profesorEncontrado.getClasesAsignadasProfesor().add(cursoEncontrado);
                    
                }
            }
        }
        br.close();
        nuevoFR.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    public Profesor encontrarProfesor(String usuario) {
        
        Profesor[] profesorEncontrado = new Profesor[1];
        
        Loginalumnos.usuarios.forEach(profesor -> {
            if (profesor.getUsuario().equals(usuario)) profesorEncontrado[0] = profesor;
        });
        
        return profesorEncontrado[0];
    }
    
}